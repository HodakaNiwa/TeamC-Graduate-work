//=============================================================================
//
// 2Dポリゴンの処理 [scene2D.cpp]
// Author : 佐藤安純　SATOU ASUMI
//
//=============================================================================
#include "minimap.h"
#include "manager.h"
#include "input.h"
#include "renderer.h"
#include "scene.h"
#include "input.h"
#include "logo.h"
#include "bottun.h"

//=============================================================================
// マクロ定義
//=============================================================================
#define VECTOR_ZERO		(D3DXVECTOR3(0.0f, 0.0f, 0.0f))	//ベクトルの初期化

//=============================================================================
// 生成処理
//=============================================================================
CMiniMap * CMiniMap::Create(void)
{
	//インスタンスの生成
	CMiniMap * pMiniMap = NULL;

	if (pMiniMap == NULL)
	{
		pMiniMap = new CMiniMap;

		if (pMiniMap != NULL)
		{
			pMiniMap->Init();
		}
	}
	return pMiniMap;
}

//=============================================================================
// コンストラクタ
//=============================================================================
CMiniMap::CMiniMap(int nPriority, CScene::OBJTYPE type)
{
	m_pTexture = NULL;		// テクスチャへのポインタ
	m_pVtxBuff = NULL;		// 頂点バッファへのポインタ
	m_pos = VECTOR_ZERO;	// ポリゴンの位置
	m_Size = VECTOR_ZERO;	// ポリゴンのサイズ

}

//=============================================================================
// コンストラクタ
//=============================================================================
CMiniMap::CMiniMap()
{
	m_pTexture = NULL;		// テクスチャへのポインタ
	m_pVtxBuff = NULL;		// 頂点バッファへのポインタ
	m_pos = VECTOR_ZERO;	// ポリゴンの位置
	m_Size = VECTOR_ZERO;	// ポリゴンのサイズ
}

//=============================================================================
// デストラクタ
//=============================================================================
CMiniMap::~CMiniMap() {}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CMiniMap::Init(void)
{
	if (m_pScene2D == NULL)
	{
		m_pScene2D = new CScene2D;

		if (m_pScene2D != NULL)
		{
			m_pScene2D->BindTexture(NULL);
			m_pScene2D->Init();
			m_pScene2D->Set(D3DXVECTOR3(SCREEN_WIDTH / 2,SCREEN_HEIGHT / 2,0.0f),D3DXVECTOR3(50.0f,50.0f,0.0f));
			m_pScene2D->SetColoer(D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f));
		}
	}

	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CMiniMap::Uninit()
{
	if (m_pScene2D != NULL)
	{
		m_pScene2D->Uninit();
		delete m_pScene2D;
		m_pScene2D = NULL;
	}
}

//=============================================================================
// 更新処理
//=============================================================================
void CMiniMap::Update() {}

//=============================================================================
// 描画処理
//=============================================================================
void CMiniMap::Draw()
{
	if (m_pScene2D != NULL)
	{
		m_pScene2D->Draw();
	}
}