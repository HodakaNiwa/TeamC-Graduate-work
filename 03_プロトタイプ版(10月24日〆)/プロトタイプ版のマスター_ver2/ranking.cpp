//=============================================================================
//
// ランキングの処理 [ranking.cpp]
// Author : shun yokomichi
//
//=============================================================================
#include "ranking.h"
#include "main.h"
#include "renderer.h"
#include "manager.h"
#include "input.h"
#include "fade.h"
#include "sound.h"
#include "loadText.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define FAREM_COUNT	(60 * 5)	// フェードのフレーム数
#define LOAD_UI		("data\\TEXT\\UI\\Ranking.txt")

//*****************************************************************************
// 静的メンバ変数
//*****************************************************************************

//=============================================================================
// デフォルトコンストラクタ
//=============================================================================
CRanking::CRanking(){}

//=============================================================================
// デストラクタ
//=============================================================================
CRanking::~CRanking(){}

//=============================================================================
// 初期化処理
//=============================================================================
void CRanking::Init(void)
{
	//ベースの初期化
	CModeBase::Init();

	//UI情報の読み込み
	LoadUI(LOAD_UI);
}

//=============================================================================
// 終了処理
//=============================================================================
void CRanking::Uninit(void)
{
	//ベースの破棄
	CModeBase::Uninit();

	//フェード以外削除
	CScene::ReleaseFade();
}

//=============================================================================
// 更新処理
//=============================================================================
void CRanking::Update(void)
{
	//インプットの取得　
	CGamePad	*pGamePad = CManager::GetInputGamePad();
	CInputKeyboard * pKeyboard = CManager::GetInputkeyboard();

	if (pKeyboard->GetKeyboardTrigger(DIK_RETURN) == true)
	{//ランキングからタイトルへ
	 //フェードが始まったら
		if (CFade::GetFadeMode() != CFade::FADE_OUT)
		{
			CFade::SetFade(CManager::MODE_TITLE);
		}
	}
}
//=============================================================================
// 描画処理
//=============================================================================
void CRanking::Draw(void)
{
	CScene::DrawAll();
}